
返回的图片验证码不像图书馆案例一样是从数据库里取出的数据，而是用服务端另一个程序生成的图片验证码。再把前端发过来的request,和生成的图片码存在redis中。方便下次验证用。

发送短信的逻辑：
1：从请求中取到：
手机号：用于发送给哪个手机
用户输入的验证码：
用于与redis中的验证码核对是否一样
如果手机号格式符合，验证码也对了，就执行发短信的动作，并且给前端返回一个发送成功的response,让前端根据这个标志去做倒计时

a = request.form.get(mobile)
判断a是否符合正则表达式：
if!(re.match(r'1(358)//d{9}',a))
    判断用户的验证码是否和redis上的一样
if 用户的验证码=Redis_store.get('当时的唯一码')
    那么执行发送验证码的动作
ccp.send_template_sms('mobile', ['888888', 5], 1)
response =
else:return response

通过val()函数取到值，然后就是给一个变量，把变量值存在一个json对象上，然后在后端用，request.json.get()取到值。比如用户在前端输入的密码。